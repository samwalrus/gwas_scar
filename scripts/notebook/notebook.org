#+TITLE: Genome Wide Association Study of Scar Size in ALSPAC
#+AUTHOR: Sam Neaves

* About

This notebook is written as an [[https://orgmode.org][emacs Org file]] and exported into HTML
and PDF formats. 
Org files are plain text and can be viewed with any plain text file
viewer. 
In addition if the file is opened in [[https://www.gnu.org/software/emacs/][emacs]], interactive features of
running the code in the code blocks can be performed using a feature called
[[https://orgmode.org/worg/org-contrib/babel/][org babel]].
The GIT hub repository for this project is https://github.com/samwalrus/gwas_scar. 
This contains a record of previous versions of the notebook as it has
been developed for transparency. 
Code blocks are in Bash, R and Prolog (only the subset required for
defining makeprog files for[[https://github.com/evoldoers/biomake][ Biomake]] )
The programming style of mixing prose and code blocks in notebooks is
a type of [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]].

This notebook and associated code can be read in a number of ways.
Firstly it can be read as a fixed record of the code that was run and the
results obtained at the time on the hardware used by myself.
Secondly it can be run interactively step by step where a reader is
able to modify code blocks to explore the coded parameter space as well
as add or remove lines of code.
Thirdly it can be read as instructions to run the code as part
of a pipeline.
This can be done by 'tangling' the src_code blocks into source files
which can then be run in a biomake pipeline to  'make' the resulting
figures and output files from the raw data files.

** Initial Setup for interactive code.

The code in this notebook is designed to be open and rerun-able. 
Some aspects of running code on a particular system at a particular
time may need to be modified.
The following instruction give details on how this code was run to
produce this document.

This code was run on two machines, due to how the data and compute are
currently organised in Bristol.
This means that the rcode in this notebook will either be directed at
a local session or a remote session.
Each source code block will be labeled in order with the appripoiate
session for this to work.
The code for each session needs to run sequentially due to the
procedural nature of the code.
Running a code block from one session out of sequenetial order might
lead to unexpected results.

The first part of the code is run on a macbook laptop which is able to
connect to the local SMB drive where ALSPAC phenotype data is stored.
This code extracts the relevant variables and writes these to a file
which is then copied onto the second machine which is part of the
university of Bristol HPC facilities.

To set up the first part of the code to run interactively on the local machine first connect to
the ALSPAC data store using the SMB server (as documented at..).
(If working remotely the VPN will need to be on). 
Then:
1. open this .org file in emacs
2. open a local shell in emacs (M-x shell)
3. Navigate to your local working directory 
4. Start R.

Use the org babel commands to run an execute this code.


The rest of the code is run on the University of Bristol (UOB) high
perferomace computer (HPC).
As of the summer of 2022, the current HPC machine at UOB is Blue
Crystal Phase 4 (BC4). 
BC4 uses the slurm job scheduler in order to fairly share the compute
resources. 
The compute resources in HPC machines are commonly controlled by login
nodes that then utilize compute nodes.
To run the R code in this note book interactively on BC4 you need to
start an interactive job with slurm to do this you
need to:
1. Open this .org file in emacs.
2. Open a shell (M-x shell) on BC4 over [[https://www.emacswiki.org/emacs/TrampMode][tramp]].
3. Start an interactive slurm job on BC4 [[ijob]]
4. Navigate to your working directory
5. Start R in this shell and run `M-x ess-remote` to connect to the
   ess session.

Make sure the two emacs buffers with R sessions are named as the
session variables in the babel src_code blocks.

#+NAME: ijob
#+PROPERTY: header-args :eval never-export
#+BEGIN_SRC bash
srun --nodes=1 --ntasks-per-node=1 --mem=10G --time=04:00:00 --pty bash -i
#+END_src


The R code that is part of one R session block will have its src_code
block labeled source: \*shell*. In order to recreate the published
results the R code needs to be run sequentially in order.

The R code that needs to be run on a local machine to connect to
ALSPAC data will be in session block \*R*.


* Aim of the analysis

This analysis is part of the study of genetics of scaring using the
ALSPAC cohort.

** Background

When tissues are damaged in a human any time after birth a complex
wound healing process takes places which results in fibrotic scars. 
These scars can lead to loss of function in the tissue. 
The most serve cases might be skin contraction or organ failure.
For example heart failure after a heart attack.
The precise molecular mechanisms underlying the wound healing process
and scar formation is not well
understood.
This means that there are a lack of effective treatments.

Most of what is known about scar formation has been discovered using
animal models because studying scars in humans is difficult due to to
the unethical nature of delivering standard wounds to people.
The observational studies that have been conducted have mostly been in
burn wounds and these have suggested differences in race suggesting
genetic factors may have an impact.

In this work we attempt to overcome some of the difficulties in human
studies by looking at standard wounds.
This is done by using longitual cohort data from the Avon longitudal
parents and children study.
Specifically we look at participants who have had BCG vaccinations
which have resulted in scars.
The BCG vaccination is X.
It often causes a fairly standardized scar due to the routine nature
of the administration of the scar.
In ALSPAC the longest axis of the scar was measured in millimeters, as
well as the age of the scar and the field worker who measured the scar.

* Getting the Phenotype data.

We first need to pull the phenotype and co-var data from the ALSPAC
data store using the R alspac library write this to a file. 
The following code needs to be run in the local R session that is on a
machine that can connect to the 'smb' drive.

The variables that we need to extract are:

1. Sex: kz021 
2. Fieldworker for BCG session: [[https://discovery.closer.ac.uk/item/uk.alspac/586cdfc0-9d9b-42d7-a191-6d54ea64aab5][fm4bc001]] 
3. Participant remembers having BCG injection:[[https://discovery.closer.ac.uk/item/uk.alspac/5541594d-ca18-4b6d-9c91-c5022d8f0063][fm4bc020]]
4. Age participant had BCG (years):[[https://discovery.closer.ac.uk/item/uk.alspac/99c08293-3f88-4bd1-b3e3-5ecf8906f414][fm4bc021]]
5. Bcg scar present:[[https://discovery.closer.ac.uk/item/uk.alspac/32640a73-a2b8-4f96-9bab-fa0c31d0fdf6][fm4bc022]]
6. Size of scar (mm):[[https://discovery.closer.ac.uk/item/uk.alspac/dbe1bfce-67e5-4fd8-9e48-6bd3e15a3da4][fm4bc023]]
7. Description of scar:[[https://discovery.closer.ac.uk/item/uk.alspac/d80de95d-0d92-474e-a6dd-27034a1db566][fm4bc024]]
8. Color of scar:[[https://discovery.closer.ac.uk/item/uk.alspac/b130b42c-6100-4d5a-8b25-d98ed24a4a8d][fm4bc025]]



*Local R session*
#+NAME: get_vars
#+BEGIN_SRC R :session *shell* :results output :tangle get_pheno.R
  library(devtools)
  ### library(alspac is available from)
  library(alspac)
  setDataDir("/Volumes/ALSPAC-Data/")
  data(current)
  data(useful)

  ### Sex
  ### kz021

  ### Fieldworker for BCG session: FOM4
  ### fm4bc001

  ### Participant remembers having BCG injection: FOM4
  ### fm4bc020

  ### Age participant had BCG (years): FOM4
  ### fm4bc021

  ### Bcg scar present
  ### fm4bc022

  ### size of scar (mm)
  #### fm4bc023

  ### Description of scar
  ### fm4bc024

  ### Color of scar
  ### fm4bc025

  varnames <- c("kz021","fm4bc001","fm4bc020","fm4bc021","fm4bc022","fm4bc023", "fm4bc024","fm4bc025")
  vars <- findVars(varnames)
  results <- extractVars(vars)

  write.csv(as.data.frame(results),file="./pheno1.csv")

#+END_SRC

#+RESULTS: get_vars
#+begin_example
Loading required package: usethis
Loading required package: readstata13
Loading required package: haven
Loading required package: stringr
Loading required package: plyr
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: parallel
R/alspac version 0.33.0
We have made several changes to how the extractVars function works.
This may lead to slightly different formatting compared to previously.
See also the new createDictionary function.
Warning message:
package ‘dplyr’ was built under R version 4.0.5
Warning message:
In findVars(varnames) :
  One or more variables have the same name (fix with filterVars()): kz021
Starting extraction from 3 files in the ALSPAC data directory
Extracting from: /Volumes/ALSPAC-Data//Current/Other/Cohort Profile//cp_2b.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Clinic/Child//f08_4d.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Clinic/Adult//FOM4_3b.dta
Collapsing data
New names:
kz021...4
kz021...6
Starting extraction from 7 files in the ALSPAC data directory
Extracting from: /Volumes/ALSPAC-Data//Current/Quest/Mother//a_3e.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Quest/Mother//b_4f.dta
Extracting from: /Volumes/ALSPAC-Data//Useful_data/bestgest//bestgest.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Quest/Mother//c_8a.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Other/Cohort Profile//cp_2b.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Other/Sample Definition//kz_5c.dta
Extracting from: /Volumes/ALSPAC-Data//Current/Other/Sample Definition//mz_5a.dta
Collapsing data
New names:
kz021...26
Automatically removing data for individuals who have withdrawn consent.
#+end_example



This file then needs to be moved to the BC4 working directory

#+NAME: move_pheno
#+PROPERTY: header-args :eval never-export
#+BEGIN_SRC bash
mv $(LocalPath)/$(Phenofile) $(HPCPath)/$(Phenofile)
#+END_src

* Exploring Phenotype data

** Reading the file into R

** Excluding people
Participants without scars are excluded.

** Examining scar size 
*** summary
*** plot
*** inverse rank transform summary and plot

We inverse rank transform the scar measurement residuals because this
results in a normally distributed quantitive trait.

*** Writing to file

* Running GWASes with Gemma

** Basic association

** LMM association

* Exploring the results

** Manhatten plot

** Zoom in on chr and region

** Snp with highest association

** load genotype

** box plot

** Quantify relationship with linear model
